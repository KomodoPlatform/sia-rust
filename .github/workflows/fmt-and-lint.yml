name: Format and Lint
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  fmt-and-lint:
    name: x86 Format and Lint Checks
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile minimal --component clippy rustfmt
          rustup default nightly-2023-06-01

      - name: Cargo cache
        uses: ./.github/actions/cargo-cache

      - name: fmt check
        # Format checks aren't OS dependent.
        if: matrix.os == 'ubuntu-latest'
        run: cargo fmt --all -- --check

      - name: Clippy lint
        run: cargo clippy --all-targets --all-features -- --D warnings

  wasm-lint:
    name: Wasm Lint Checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install nightly-2023-06-01 --no-self-update --profile=minimal --component clippy
          rustup default nightly-2023-06-01
          rustup target add wasm32-unknown-unknown

      - name: Cargo cache
        uses: ./.github/actions/cargo-cache

      - name: Clippy lint
        run: cargo clippy --target wasm32-unknown-unknown -- --D warnings